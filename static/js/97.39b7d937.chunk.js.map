{"version":3,"file":"static/js/97.39b7d937.chunk.js","mappings":"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","sources":["webpack://wc-app/./src/Policies/Policies.module.css?0788","Policies/Policies.jsx","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Policies_header__mFfc+\",\"wcAccordion\":\"Policies_wcAccordion__NhoWo\"};","import * as React from \"react\";\nimport { Accordion } from \"react-bootstrap\";\n\nimport policies from \"./Policies.json\";\nimport styles from \"./Policies.module.css\";\n\nconst Policies = () => {\n  return <div className=\"heroContainer\">\n    <div className=\"container\">\n      <Accordion defaultActiveKey={[\"0\"]} flush alwaysOpen>\n        {policies.map((policy, i) =>\n          <Accordion.Item className={styles.wcAccordion} key={i} eventKey={i}>\n            <Accordion.Header>\n              <h3 className={styles.header}>{policy.header}</h3>\n            </Accordion.Header>\n\n            <Accordion.Body>\n              <span>{policy.description}</span>\n\n              {policy.items && <ul>\n                {policy.items.map((item, i) =>\n                  <li key={i}>{item}</li>\n                )}\n              </ul>}\n            </Accordion.Body>\n          </Accordion.Item>\n        )}\n      </Accordion>\n    </div>\n  </div>;\n};\n\nexport default Policies;","import * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * This component accepts all of [`Collapse`'s props](/utilities/transitions/#collapse-props).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","import * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});"],"names":["_jsx","className","children","Accordion","defaultActiveKey","flush","alwaysOpen","policies","policy","i","_jsxs","styles","eventKey","header","description","items","map","item","isAccordionItemSelected","activeEventKey","Array","isArray","includes","context","React","displayName","AccordionCollapse","_ref","ref","_ref$as","as","Component","bsPrefix","props","_objectWithoutProperties","_excluded","useContext","AccordionContext","useBootstrapPrefix","Collapse","_objectSpread","in","classNames","AccordionBody","onEnter","onEntering","onEntered","onExit","onExiting","onExited","AccordionItemContext","AccordionButton","onClick","accordionOnClick","_useContext","onSelect","e","eventKeyPassed","filter","k","concat","_toConsumableArray","useAccordionButton","type","AccordionHeader","AccordionItem","contextValue","useMemo","Provider","value","_useUncontrolled","useUncontrolled","activeKey","_useUncontrolled$as","controlledProps","prefix","Object","assign","Button","Item","Header","Body"],"sourceRoot":""}